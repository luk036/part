#############################################################################
# Makefile for building: qtcppunit
# Generated by qmake (1.04a) (Qt 3.1.1) on: Mon Oct 25 18:03:40 2004
# Project:  qtcppunit.pro
# Template: app
# Command: $(QMAKE) -o Makefile qtcppunit.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -march=i386 -mcpu=i686 -g -DGLX_GLXEXT_LEGACY -fno-use-cxa-atexit -fexceptions -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -march=i386 -mcpu=i686 -g -DGLX_GLXEXT_LEGACY -fno-use-cxa-atexit -fexceptions -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/default -I. -I../../FMBiPart -I../../GDsl -I../../Netlist -I../../.. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lcppunit -L../../lib -lNetlist -lGDsl -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = CompilerTest.hpp \
		GDListTest.hpp \
		GBPQueueTest.hpp \
		NetlistBaseTest.hpp \
		NetlistTest.hpp
SOURCES = CompilerTest.cpp \
		GDListTest.cpp \
		GBPQueueTest.cpp \
		NetlistBaseTest.cpp \
		NetlistTest.cpp \
		Main.cpp
OBJECTS = CompilerTest.o \
		GDListTest.o \
		GBPQueueTest.o \
		NetlistBaseTest.o \
		NetlistTest.o \
		Main.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = qtcppunit.pro
QMAKE_TARGET = qtcppunit
DESTDIR  = 
TARGET   = qtcppunit

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: qtcppunit.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile qtcppunit.pro
qmake: 
	@$(QMAKE) -o Makefile qtcppunit.pro

dist: 
	@mkdir -p .tmp/qtcppunit && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/qtcppunit/ && ( cd `dirname .tmp/qtcppunit` && $(TAR) qtcppunit.tar qtcppunit && $(GZIP) qtcppunit.tar ) && $(MOVE) `dirname .tmp/qtcppunit`/qtcppunit.tar.gz . && $(DEL_FILE) -r .tmp/qtcppunit

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

CompilerTest.o: CompilerTest.cpp CompilerTest.hpp

GDListTest.o: GDListTest.cpp GDListTest.hpp

GBPQueueTest.o: GBPQueueTest.cpp GBPQueueTest.hpp

NetlistBaseTest.o: NetlistBaseTest.cpp NetlistBaseTest.hpp

NetlistTest.o: NetlistTest.cpp NetlistTest.hpp

Main.o: Main.cpp 

####### Install

install: all 

uninstall: 

